
    <script>

        extend.cart = function(){

            scope.view.page = 'details'
            scope.view.use_billing_address = true
            scope.view.delivery_options = []

            let cart_menu_item = document.getElementById('menu-cart'),
                mobile_cart_menu_item = document.getElementById('menu-cart-mobile'),
                is_checkout = document.querySelector('section.checkout')

            <% if (typeof cart != 'undefined' && cart._key) { %>

                watch['cart.email'] = function(data){
                    if (data.match(/hotmail/i)){
                        scope.notify('We sometimes have issues sending mail notiications to hotmail accounts. Please consider our SMS/Text notification option where possible','error',15,'handstop white')
                    }
                }

                scope.cart = <%- JSON.stringify(cart) %>

                scope.getTotalItems = function(){
                    return scope.cart.items.reduce((acc, item)=>{
                        return acc + item.quantity
                    }, 0)
                }

                scope.setCartCounter = function(items){
                    scope.view.cart_counter.innerHTML = scope.getTotalItems()
                }

                if (cart_menu_item && scope.cart && scope.cart.items){
                    scope.view.cart_counter = document.createElement("SPAN")
                    scope.view.cart_counter.classList.add('cart-counter')
                    scope.setCartCounter(scope.cart.items)
                    cart_menu_item.appendChild(scope.view.cart_counter)

                    if (mobile_cart_menu_item){
                        scope.view.mobile_cart_counter = scope.view.cart_counter.cloneNode(true)
                        mobile_cart_menu_item.appendChild(scope.view.mobile_cart_counter)
                    }

                }

                if (!scope.cart){
                    scope.cart = {}
                    scope.cart.items = []
                }

                if (!scope.cart.billing_address){
                    scope.cart.billing_address = {}
                }

                if (!scope.cart.shipping_address){
                    scope.cart.shipping_address = {}
                }

                if (!scope.cart.customer){
                    scope.cart.customer = {}
                }

                <% if (typeof user == 'object'){ %>
                    <% if (user.title){ %>
                        scope.cart.customer.title = '<%- user.title %>'
                    <% } %>
                    <% if (user.name){ %>
                        scope.cart.customer.name = '<%- user.name %>'
                    <% } %>
                    <% if (user.tel){ %>
                        scope.cart.customer.tel = '<%- user.tel %>'
                    <% } %>
                    <% if (user.email){ %>
                        scope.cart.customer.email = '<%- user.email %>'
                    <% } %>

                    <% if (user.shipping_address){ %>
                        scope.cart.shipping_address = <%- JSON.stringify(user.shipping_address) %>
                    <% } %>

                    <% if (user.billing_address){ %>
                        scope.cart.billing_address = <%- JSON.stringify(user.billing_address) %>
                    <% } %>

                <% } %>

                if (!scope.cart.customer.notification_method){
                    scope.cart.customer.notification_method = 'sms'
                }

                scope.parseDeliveryOption = function(optn){
                    if (typeof optn == 'object'){
                        if (optn.name && optn.price > 0){
                            return optn.name+' - £'+(optn.price/100).toFixed(2)
                        } else {
                            return optn.name+' - Free'
                        }
                    }

                }

                scope.parseDeliveryOptions = function(){

                    if (scope.cart.delivery_options){

                        scope.view.delivery_options = scope.cart.delivery_options.filter((option)=>{

                            let ok = false

                            if (option.orders_over && scope.cart.item_total && option.orders_over < scope.cart.item_total){
                                ok = true
                            }

                            if (option.orders_under && scope.cart.item_total && option.orders_under >= scope.cart.item_total){
                                ok = true
                            }

                            if (option.postcode_match && scope.cart.shipping_address.postcode){

                                let re = new RexExp(option.postcode_match,'i')

                                if (scope.cart.shipping_address.postcode.match(option.postcode_match)){
                                    ok = true
                                } else {
                                    ok = false
                                }
                            }

                            return ok

                        })

                        view.update('view.delivery_options')

                    }

                }

                scope.setDelivery = function(option){

                    let payload = {
                        _key: '<%- cart._key %>',
                        delivery: option
                    }

                    scope.post('cart/set-delivery',payload).then((cart)=>{

                    //    scope.cart.delivery_method = cart.delivery_method
                        scope.cart = cart
                        view.update('cart')
                    })


                }

                scope.addToCart = function(item, type){

                    let qty = 1,
                        payload
                    if (scope.view.add_item && scope.view.add_item.quantity){
                        qty = scope.view.add_item.quantity
                    }

                    if (typeof item == 'object'){
                        payload = {
                            _key: '<%- cart._key %>',
                            item_key: item._key,
                            type: item.type,
                            quantity: qty
                        }
                    } else {
                        payload = {
                            _key: '<%- cart._key %>',
                            item_key: item,
                            type: type,
                            quantity: qty
                        }
                    }

                    <% if (typeof user == 'object' && user.guard && user.guard == 'trade'){ %>
                        payload.trade_guard = '<%- user.guard %>'
                        payload.trade_key = '<%- user._key %>'
                    <% } %>

                    scope.post('cart/add-item',payload).then((cart)=>{
                        scope.cart = cart
                        let added_item = scope.cart.items.find((item)=>{
                            return item._key == payload.item_key
                        })

                        scope.setCartCounter(cart.items)
                        view.update('cart')

                        if (!is_checkout){
                            let notification_content = '<a href="/<%- view.ecommerce.cart_name.toLowerCase() %>" class="grid col-12 gap-1 w-100 notification-cart-add"><div class="colspan-2 thumbnail"><img src="'+added_item.thumbnail+'" class="object-fit"></div><div class="colspan-10 details"><h4 class="text-bold">Added '+added_item.name+'</h4><div>£'+(added_item.price/100).toFixed(2)+'</div></div></a>'
                            scope.notify(notification_content,'success',30, 'arrowright')
                        }

                    //    scope.notify('Item Added! <a href="/<%- view.ecommerce.cart_name.toLowerCase() %>">View <%- view.ecommerce.cart_name %></a>')

                    }).catch((err)=>{
                        console.log(err)
                        scope.notify(err,'error',10,'handstop white')
                    })

                }

                scope.removeFromCart = function(item, all){

                    let payload = {
                        _key: '<%- cart._key %>',
                        item_key: item._key
                    }

                    if (all){
                        payload.all = true
                    }

                    scope.post('cart/remove-item',payload).then((cart)=>{
                        scope.cart = cart
                        scope.setCartCounter(scope.cart.items)
                        view.update('cart')
                        scope.notify('Item Removed')
                    }).catch((err)=>{
                        scope.notify(err,'error',10,'handstop white')
                    })

                }

                scope.emptyCart = function(item_key, type){

                    let payload = {
                        _key: '<%- cart._key %>'
                    }

                    scope.post('cart/empty',payload).then((cart)=>{
                        scope.cart = cart
                        scope.setCartCounter(scope.cart.items)
                        view.update('cart')
                        scope.notify('Cart Emptied')
                    }).catch((err)=>{
                        scope.notify(err,'error',10,'handstop white')
                    })

                }

                scope.checkout = function(){

                    if (scope.cart.items.length < 1){
                        scope.notify('Please add at least 1 item to checkout','error',10,'handstop white')
                        return false
                    }

                    if (!scope.cart.customer.name || !scope.cart.customer.name.match(/\s/)){
                        scope.notify('Please add your full name','error',10,'handstop white')
                        return false
                    }

                    // if (!scope.cart.billing_address.address_line1){
                    //     scope.notify('Please add your address','error',10,'handstop white')
                    //     return false
                    // }
                    //
                    // if (!scope.cart.billing_address.address_level2){
                    //     scope.notify('Please add your town or city','error',10,'handstop white')
                    //     return false
                    // }

                    if (!scope.cart.customer.notification_method){
                        scope.notify('Please select your preferred notification method','error',10,'handstop white')
                        return false
                    }

                    if (scope.cart.customer.email && !scope.cart.customer.email.match(/^[^\s@]+@([^\s@.,]+\.)+[^\s@.,]{2,}$/)){
                        scope.notify('Please add a valid email address','error',10,'handstop white')
                        return false
                    }

                    if (scope.cart.customer.tel && !scope.cart.customer.tel.match(/^(?:07|\+?44)(?:\d\s?){8,10}$/)){
                        scope.notify('Please add a valid mobile number','error',10,'handstop white')
                        return false
                    }

                    if (scope.cart.customer.notification_method == 'email' && !scope.cart.customer.email){
                        scope.notify('Please add an email address','error',10,'handstop white')
                        return false
                    }

                    if (scope.cart.customer.notification_method == 'sms' && !scope.cart.customer.tel){
                        scope.notify('Please add a mobile number','error',10,'handstop white')
                        return false
                    }

                    let name_obj = scope.cart.customer.name.split(' ')
                    scope.name_obj = {
                        first_name: name_obj[0],
                        last_name: name_obj[name_obj.length-1]
                    }

                    // scope.cart.shipping_address = scope.cart.billing_address
                    if (!scope.cart.shipping_address || !scope.cart.shipping_address.name){
                        scope.cart.shipping_address = {}
                        scope.cart.shipping_address.name = scope.cart.customer.name
                        scope.cart.shipping_address.title = scope.cart.customer.title
                    }

                    scope.put('cart',<%- cart._key %>,scope.cart).then((cart)=>{
                        scope.cart = cart
                        scope.view.page = 'billing'
                        view.update('cart')
                        view.update('view.page')
                        // scope.notify('Cart Updated')
                    }).catch((err)=>{
                        scope.notify(err,'error',10,'handstop white')
                    })

                }

                scope.delivery = function(){

                    if (!scope.cart.billing_address.address_line1){
                        scope.notify('Please add your address','error',10,'handstop white')
                        return false
                    }

                    if (!scope.cart.billing_address.address_level2){
                        scope.notify('Please add your town or city','error',10,'handstop white')
                        return false
                    }

                    if (!scope.cart.shipping_address || !scope.cart.shipping_address.address_line1){
                        scope.cart.shipping_address = scope.cart.billing_address
                    }
                    if (!scope.cart.shipping_address.name){
                        scope.cart.shipping_address.name = scope.cart.customer.name
                        scope.cart.shipping_address.title = scope.cart.customer.title
                    }

                    scope.put('cart',<%- cart._key %>,scope.cart).then((cart)=>{
                        scope.cart = cart
                        scope.view.page = 'shipping'
                        scope.parseDeliveryOptions()
                        view.update('cart')
                        view.update('view.page')
                        // scope.notify('Cart Updated')
                    }).catch((err)=>{
                        scope.notify(err,'error',10,'handstop white')
                    })

                }

                scope.payment = function(){

                    if (!scope.cart.delivery_method){
                        scope.notify('Please select a delivery method','error',10,'handstop white')
                        return false
                    }

                    if (!scope.cart.shipping_address.address_line1){
                        scope.notify('Please add your address','error',10,'handstop white')
                        return false
                    }

                    if (!scope.cart.shipping_address.address_level2){
                        scope.notify('Please add your town or city','error',10,'handstop white')
                        return false
                    }

                    if (!scope.cart.shipping_address.postal_code){
                        scope.notify('Please add your postcode','error',10,'handstop white')
                        return false
                    }

                    scope.initPaypal()

                    scope.view.page = 'gateways'
                    view.update('view.page')

                    scope.put('cart',<%- cart._key %>,scope.cart).then((cart)=>{
                        scope.cart = cart
                        scope.view.page = 'gateways'
                        view.update('view.page')
                        // scope.notify('Cart Updated')
                    }).catch((err)=>{
                        scope.notify(err,'error',10,'handstop white')
                    })

                    // let payload = {
                    //     _key: scope.cart._key,
                    //     delivery_method: scope.cart.delivery_method
                    // }
                    //
                    // scope.post('cart/set-delivery',payload).then((cart)=>{
                    //     console.log(cart)
                    //     scope.cart = cart
                    //     view.update('cart')
                    // }).catch((err)=>{
                    //     scope.notify(err,'error',10,'handstop white')
                    // })


                }

                scope.initPaypal = function(){

                    if (paypal && paypal.Buttons){

                        let payload = {
                            payer: {
                              name: {
                                given_name: scope.name_obj.first_name,
                                surname: scope.name_obj.last_name
                              },
                              address: {
                                address_line_1: scope.cart.billing_address.address_line1,
                                address_line_2: scope.cart.billing_address.address_line2,
                                admin_area_2: scope.cart.billing_address.address_level2,
                                admin_area_1: scope.cart.billing_address.address_level1,
                                postal_code: scope.cart.billing_address.postal_code,
                                country_code: 'GB'
                              },
                              email_address: scope.cart.customer.email,

                          },
                          purchase_units: [{
                            amount: {
                                value: (scope.cart.total/100).toFixed(2),
                                  currency_code: 'GBP'
                              },
                              shipping: {
                                  address:{
                                    address_line_1: scope.cart.shipping_address.address_line1,
                                    address_line_2: scope.cart.shipping_address.address_line2,
                                    admin_area_2: scope.cart.shipping_address.address_level2,
                                    admin_area_1: scope.cart.shipping_address.address_level1,
                                    postal_code: scope.cart.shipping_address.postal_code,
                                    country_code: 'GB'
                                }
                              },
                          }],
                          application_context: {
                              shipping_preference: 'NO_SHIPPING'
                          }
                        }

                        if (scope.cart.customer.tel){
                            payload.payer.phone = {
                                phone_type: "MOBILE",
                                phone_number: {
                                    national_number: scope.cart.customer.tel
                                }
                            }
                        }

                        paypal.Buttons({
                          createOrder: function(data, actions) {
                            return actions.order.create(payload);
                          },
                          onApprove: function(data, actions) {
                            return actions.order.capture().then(function(details) {
                              window.location.href = '/checkout/paypal/'+details.id;
                            });
                          }
                          }).render('#paypal-button-container'); // Display payment options on your web page

                    }

                }


            <% } %>

        }

    </script>
