
    <script>

        extend.cart = function(){

            scope.view.page = 'billing'
            scope.view.use_billing_address = true
            scope.view.delivery_options = []

            let cart_menu_item = document.getElementById('menu-cart'),
                mobile_cart_menu_item = document.getElementById('menu-cart-mobile')

            <% if (typeof cart != 'undefined' && cart._key) { %>

                watch['cart.notification_method'] = function(){
                    scope.cart.email = ''
                    scope.cart.tel = ''
                }

                watch['cart.email'] = function(data){
                    if (data.match(/hotmail/i)){
                        scope.notify('We sometimes have issues sending mail notiications to hotmail accounts. Please consider our SMS/Text notification option where possible','error',15,'fa-exclamation-circle')
                    }
                }

                watch['cart.delivery_method'] = function(){

                    if (!scope.cart.shipping_total && scope.cart.delivery_method){

                        let shipping = scope.cart.delivery_options.findIndex((option)=>{
                            return option._key == scope.cart.delivery_method
                        })

                        if (shipping >= 0 && typeof scope.cart.delivery_options[shipping] == 'object'){
                            scope.cart.shipping_method = scope.cart.delivery_options[shipping].name
                            scope.cart.shipping_total = scope.cart.delivery_options[shipping].price
                            scope.cart.total += scope.cart.shipping_total
                            view.update('cart')
                        }
                    }


                }

                scope.cart = <%- JSON.stringify(cart) %>

                scope.getTotalItems = function(){
                    return scope.cart.items.reduce((acc, item)=>{
                        return acc + item.quantity
                    }, 0)
                }

                scope.setCartCounter = function(items){
                    scope.view.cart_counter.innerHTML = scope.getTotalItems()
                }

                if (cart_menu_item && scope.cart && scope.cart.items){
                    scope.view.cart_counter = document.createElement("SPAN")
                    scope.view.cart_counter.setAttribute('id','cart-counter')
                    scope.setCartCounter(scope.cart.items)
                    cart_menu_item.appendChild(scope.view.cart_counter)

                    if (mobile_cart_menu_item){
                        mobile_cart_menu_item.appendChild(scope.view.cart_counter)
                    }

                }

                if (!scope.cart.billing_address){
                    scope.cart.billing_address = {}
                }

                if (!scope.cart.shipping_address){
                    scope.cart.shipping_address = {}
                }

                scope.parseDeliveryOption = function(optn){
                    if (typeof optn == 'object'){
                        if (optn.name && optn.price > 0){
                            return optn.name+' - Â£'+(optn.price/100).toFixed(2)
                        } else {
                            return optn.name+' - Free'
                        }
                    }

                }

                scope.parseDeliveryOptions = function(){

                    if (scope.cart.delivery_options){

                        scope.view.delivery_options = scope.cart.delivery_options.filter((option)=>{

                            let ok = false

                            if (option.orders_over && scope.cart.item_total && option.orders_over < scope.cart.item_total){
                                ok = true
                            }

                            if (option.orders_under && scope.cart.item_total && option.orders_under >= scope.cart.item_total){
                                ok = true
                            }

                            if (option.postcode_match && scope.cart.shipping_address.postcode){

                                let re = new RexExp(option.postcode_match,'i')

                                if (scope.cart.shipping_address.postcode.match(option.postcode_match)){
                                    ok = true
                                } else {
                                    ok = false
                                }
                            }

                            return ok

                        })

                        view.update('view.delivery_options')

                    }

                }

                scope.addToCart = function(item, type){

                    let qty = 1,
                        payload
                    if (scope.view.add_item && scope.view.add_item.quantity){
                        qty = scope.view.add_item.quantity
                    }

                    if (typeof item == 'object'){
                        payload = {
                            _key: '<%- cart._key %>',
                            item_key: item._key,
                            type: item.type,
                            quantity: qty
                        }
                    } else {
                        payload = {
                            _key: '<%- cart._key %>',
                            item_key: item,
                            type: type,
                            quantity: qty
                        }
                    }

                    scope.post('cart/add-item',payload).then((cart)=>{
                        scope.cart = cart
                        scope.setCartCounter(cart.items)
                        view.update('cart')
                        scope.notify('Item Added! <a href="/<%- view.ecommerce.cart_name.toLowerCase() %>">View <%- view.ecommerce.cart_name %></a>')
                    }).catch((err)=>{
                        console.log(err)
                        scope.notify(err,'error',5,'fa-exclamation-circle')
                    })

                }

                scope.removeFromCart = function(item){

                    let payload = {
                        _key: '<%- cart._key %>',
                        item_key: item._key
                    }

                    scope.post('cart/remove-item',payload).then((cart)=>{
                        scope.cart = cart
                        scope.setCartCounter(scope.cart.items)
                        view.update('cart')
                        scope.notify('Item Removed')
                    }).catch((err)=>{
                        scope.notify(err,'error',5,'fa-exclamation-circle')
                    })

                }

                scope.emptyCart = function(item_key, type){

                    let payload = {
                        _key: '<%- cart._key %>'
                    }

                    scope.post('cart/empty',payload).then((cart)=>{
                        scope.cart = cart
                        scope.setCartCounter(scope.cart.items)
                        view.update('cart')
                        scope.notify('Cart Emptied')
                    }).catch((err)=>{
                        scope.notify(err,'error',5,'fa-exclamation-circle')
                    })

                }

                scope.checkout = function(){

                    if (scope.cart.items.length < 1){
                        scope.notify('Please add at least 1 item to checkout','error',5,'fa-exclamation-circle')
                        return false
                    }

                    if (!scope.cart.customer.full_name){
                        scope.notify('Please add your name','error',5,'fa-exclamation-circle')
                        return false
                    }

                    if (!scope.cart.billing_address.address_line1){
                        scope.notify('Please add your address','error',5,'fa-exclamation-circle')
                        return false
                    }

                    if (!scope.cart.billing_address.address_level2){
                        scope.notify('Please add your town or city','error',5,'fa-exclamation-circle')
                        return false
                    }

                    if (!scope.cart.customer.notification_method){
                        scope.notify('Please select your preferred notification method','error',5,'fa-exclamation-circle')
                        return false
                    }

                    if (!scope.cart.customer.tel && !scope.cart.customer.email){
                        scope.notify('Please add your mobile contact number, or email address','error',5,'fa-exclamation-circle')
                        return false
                    }

                    scope.cart.shipping_address = scope.cart.billing_address

                    scope.put('cart',<%- cart._key %>,scope.cart).then((cart)=>{
                        scope.cart = cart
                        scope.view.page = 'shipping'
                        scope.parseDeliveryOptions()
                        view.update('cart')
                        view.update('view.page')
                        scope.notify('Cart Updated')
                    }).catch((err)=>{
                        scope.notify(err,'error',5,'fa-exclamation-circle')
                    })

                }

                scope.payment = function(){

                    scope.view.page = 'gateways'
                    view.update('view.page')

                    let payload = {
                        _key: scope.cart._key,
                        delivery_method: scope.cart.delivery_method
                    }

                    scope.post('cart/set-delivery',payload).then((cart)=>{
                        console.log(cart)
                        scope.cart = cart
                        view.update('cart')
                    }).catch((err)=>{
                        scope.notify(err,'error',5,'fa-exclamation-circle')
                    })


                }


            <% } %>

        }

    </script>
