

<script>

    extend.products = function(){

        scope.view.upload_text = "Upload Image"

        scope.get('product_attributes')

        watch['new.new_array.attribute'] = function(data){

            if (scope.product_attributes && data){
                scope.selected_attribute = scope.product_attributes.filter((item)=>{
                    return item._key == data
                })
                scope.selected_attribute = scope.selected_attribute[0].options
                view.update('selected_attribute')
            }

        }

        watch['new.category'] = function(data){
            if (data){
                scope.get('product_categories/'+data).then((category)=>{
                    scope.new.sub_category = ''
                    scope.sub_categories = category.sub_categories.map((item)=>{
                        item.value = item.name
                        return item
                    })
                    view.update('sub_categories')
                })
            }

        }

        scope.editProduct = function(collection){

            contextCloseAll()

            if (scope.view.key >= 0){
                scope.new = scope[collection][scope.view.key]
            } else {
                scope.new = {}
            }

            if (scope.new.category){
                let sub_cat = scope.new.sub_category+''
                scope.get('product_categories/'+scope.new.category).then((category)=>{
                    scope.sub_categories = category.sub_categories
                    view.update('sub_categories')
                }).then(()=>{
                    scope.new.sub_category = sub_cat
                    view.update('new.sub_category')
                })
            }

            if (!scope.new.gallery){
                scope.new.gallery = []
            }

            if (scope.new.price > 0){
                scope.new.price = (scope.new.price/100).toFixed(2)
            }

            if (typeof scope.new.adjustment == 'number'){
                scope.new.adjustment = (scope.new.adjustment/100).toFixed(2)
            }

            scope.openModal('show_product_edit')
            view.update('new')



        }

        scope.getItem = function(collection, key){

            if (key == 'new'){
                scope.new = {
                    active: true,
                    requires_delivery: true,
                    <% if (typeof view.site == 'object' && view.site.name){ %>brand: '<%- view.site.name %>'<% } %>
                }
                return
            }

            scope.view.loader = true
            view.update('view.loader')

            setTimeout(function(){
                http.get('/api/'+collection+'/'+key).then((data)=>{
                    scope.new = JSON.parse(data)

                    // scope.setPageTitle(scope.new)
                    if (scope.new.category){
                        let sub_cat = scope.new.sub_category+''
                        scope.get('product_categories/'+scope.new.category).then((category)=>{
                            scope.sub_categories = category.sub_categories.map((item)=>{
                                item.value = item.name
                                return item
                            })
                            view.update('sub_categories')
                        }).then(()=>{
                            scope.new.sub_category = sub_cat
                            view.update('new.sub_category')
                        })
                    }

                    // scope.new.price = (scope.new.price/100).toFixed(2)

                    if (scope.new.adjustment){
                        if (typeof scope.new.adjustment == 'string' && scope.new.adjustment.match(/%/)){

                        } else {
                            console.log(scope.new.adjustment)
                            scope.new.adjustment = scope.new.adjustment/100
                        }
                    }

                    if (!scope.new.gallery){
                        scope.new.gallery = []
                    }
                    scope.view.loader = false
                    view.update('view.loader')
                    view.update('new')
                })
            },500)

        }

        scope.generateSKU = function(){

            if (!scope.new.name){
                scope.notify('Please enter a name to generate a SKU','error')
                return
            }

            scope.new.sku = scope.new.name.match(/\b(\w)/g).join("")+'-'

            if (scope.new.brand){
                scope.new.sku = scope.new.brand.match(/\b(\w)/g).join("")+'-'+scope.new.sku
            }

            let url = '/api/products/search?str='+scope.new.sku

            http.get(url)
                .then((data) => {
                    data = JSON.parse(data)
console.log(url, data)
                    let idx = data.length+1

                    if (idx < 100){
                        idx = '00'+idx
                    } else if (idx < 10){
                        idx = '0'+idx
                    }

                    scope.new.sku += idx
                    view.update('new.sku')
                })



        }


        scope.insertMedia = function(media){

            if (scope.exec_data.selection){
                scope.insertCEMedia(media)
            } else {
                scope.push(scope.view.media_obj,media.url)

                if (scope.new._key){
                //    scope.saveItem('<%- table %>',scope.new, true)
                }

                view.update(scope.view.media_obj)
                scope.closeModal()
                delete scope.view.media_obj
            }
        }

        scope.showCategoryProducts = function(){
            window.location.href = '/dashboard/products/'+scope.product_categories[scope.view.key]._key
        }

    }

</script>
